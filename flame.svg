<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="918" onload="init(evt)" viewBox="0 0 1200 918" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="918.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="901" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="901" > </text>
<g id="frames">
<g >
<title>node::InternalCallbackScope::Close (10,101,010 samples, 0.06%)</title><rect x="26.8" y="629" width="0.7" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="29.79" y="639.5" ></text>
</g>
<g >
<title>Builtins_CallApiCallback (10,101,010 samples, 0.06%)</title><rect x="26.8" y="453" width="0.7" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="29.79" y="463.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.06%)</title><rect x="15.8" y="277" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="18.84" y="287.5" ></text>
</g>
<g >
<title>node::fs::FSReqPromise&lt;node::AliasedBufferBase&lt;double, v8::Float64Array&gt; &gt;::ResolveStat (10,101,010 samples, 0.06%)</title><rect x="26.8" y="661" width="0.7" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="29.79" y="671.5" ></text>
</g>
<g >
<title>unix_stream_recvmsg (10,101,010 samples, 0.06%)</title><rect x="37.7" y="741" width="0.8" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="40.75" y="751.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (10,101,010 samples, 0.06%)</title><rect x="19.5" y="805" width="0.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="22.49" y="815.5" ></text>
</g>
<g >
<title>Builtins_RunMicrotasks (10,101,010 samples, 0.06%)</title><rect x="27.5" y="517" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="30.52" y="527.5" ></text>
</g>
<g >
<title>do_syscall_64 (10,101,010 samples, 0.06%)</title><rect x="35.6" y="757" width="0.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="38.56" y="767.5" ></text>
</g>
<g >
<title>clock_gettime@@GLIBC_2.17 (20,202,020 samples, 0.12%)</title><rect x="21.7" y="821" width="1.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="24.68" y="831.5" ></text>
</g>
<g >
<title>v8::internal::MicrotaskQueue::RunMicrotasks (10,101,010 samples, 0.06%)</title><rect x="26.8" y="597" width="0.7" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="29.79" y="607.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.12%)</title><rect x="15.1" y="549" width="1.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="18.11" y="559.5" ></text>
</g>
<g >
<title>__GI___ioctl (10,101,010 samples, 0.06%)</title><rect x="21.0" y="837" width="0.7" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="23.95" y="847.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.12%)</title><rect x="15.1" y="581" width="1.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="18.11" y="591.5" ></text>
</g>
<g >
<title>Builtins_AsyncFunctionAwaitResolveClosure (10,101,010 samples, 0.06%)</title><rect x="27.5" y="485" width="0.8" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="30.52" y="495.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.12%)</title><rect x="15.1" y="517" width="1.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="18.11" y="527.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (10,101,010 samples, 0.06%)</title><rect x="18.0" y="805" width="0.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="21.03" y="815.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.06%)</title><rect x="15.8" y="197" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="18.84" y="207.5" ></text>
</g>
<g >
<title>do_epoll_wait (10,101,010 samples, 0.06%)</title><rect x="36.3" y="757" width="0.7" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="39.29" y="767.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.06%)</title><rect x="15.8" y="229" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="18.84" y="239.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (20,202,020 samples, 0.12%)</title><rect x="21.7" y="805" width="1.4" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="24.68" y="815.5" ></text>
</g>
<g >
<title>v8::Float64Array::New (10,101,010 samples, 0.06%)</title><rect x="26.8" y="373" width="0.7" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="29.79" y="383.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.06%)</title><rect x="15.8" y="53" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="18.84" y="63.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_callback (60,606,060 samples, 0.37%)</title><rect x="1184.2" y="741" width="4.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1187.16" y="751.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (60,606,060 samples, 0.37%)</title><rect x="1184.2" y="693" width="4.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1187.16" y="703.5" ></text>
</g>
<g >
<title>node::MakeLibuvRequestCallback&lt;uv_fs_s, void  (20,202,020 samples, 0.12%)</title><rect x="26.8" y="693" width="1.5" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="29.79" y="703.5" ></text>
</g>
<g >
<title>uv__async_io.part.3 (20,202,020 samples, 0.12%)</title><rect x="26.8" y="725" width="1.5" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="29.79" y="735.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (10,101,010 samples, 0.06%)</title><rect x="36.3" y="693" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="39.29" y="703.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (10,101,010 samples, 0.06%)</title><rect x="18.0" y="725" width="0.8" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="21.03" y="735.5" ></text>
</g>
<g >
<title>do_idle (14,878,787,730 samples, 91.15%)</title><rect x="40.7" y="805" width="1075.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="43.67" y="815.5" >do_idle</text>
</g>
<g >
<title>__x64_sys_epoll_wait (10,101,010 samples, 0.06%)</title><rect x="36.3" y="773" width="0.7" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="39.29" y="783.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (10,101,010 samples, 0.06%)</title><rect x="35.6" y="773" width="0.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="38.56" y="783.5" ></text>
</g>
<g >
<title>vsock_poll (10,101,010 samples, 0.06%)</title><rect x="26.1" y="741" width="0.7" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="29.06" y="751.5" ></text>
</g>
<g >
<title>GetMeshBoundingBox (10,101,010 samples, 0.06%)</title><rect x="10.0" y="837" width="0.7" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="13.00" y="847.5" ></text>
</g>
<g >
<title>node::AliasedBufferBase&lt;double, v8::Float64Array&gt;::AliasedBufferBase (10,101,010 samples, 0.06%)</title><rect x="26.8" y="389" width="0.7" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="29.79" y="399.5" ></text>
</g>
<g >
<title>established_get_first (10,101,010 samples, 0.06%)</title><rect x="38.5" y="677" width="0.7" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="41.48" y="687.5" ></text>
</g>
<g >
<title>vfs_write (10,101,010 samples, 0.06%)</title><rect x="17.3" y="757" width="0.7" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="20.30" y="767.5" ></text>
</g>
<g >
<title>proc_reg_read (10,101,010 samples, 0.06%)</title><rect x="38.5" y="757" width="0.7" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="41.48" y="767.5" ></text>
</g>
<g >
<title>[unknown] (111,111,110 samples, 0.68%)</title><rect x="12.9" y="837" width="8.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="15.92" y="847.5" ></text>
</g>
<g >
<title>__x64_sys_unlink (10,101,010 samples, 0.06%)</title><rect x="37.0" y="773" width="0.7" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="40.02" y="783.5" ></text>
</g>
<g >
<title>Builtins_PromiseFulfillReactionJob (10,101,010 samples, 0.06%)</title><rect x="27.5" y="501" width="0.8" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="30.52" y="511.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.12%)</title><rect x="15.1" y="805" width="1.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="18.11" y="815.5" ></text>
</g>
<g >
<title>try_to_unlazy (10,101,010 samples, 0.06%)</title><rect x="37.0" y="693" width="0.7" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="40.02" y="703.5" ></text>
</g>
<g >
<title>node::fs::AfterStat (10,101,010 samples, 0.06%)</title><rect x="26.8" y="677" width="0.7" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="29.79" y="687.5" ></text>
</g>
<g >
<title>default_idle (14,878,787,730 samples, 91.15%)</title><rect x="40.7" y="773" width="1075.5" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="43.67" y="783.5" >default_idle</text>
</g>
<g >
<title>tcp_get_idx (10,101,010 samples, 0.06%)</title><rect x="38.5" y="693" width="0.7" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="41.48" y="703.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (10,101,010 samples, 0.06%)</title><rect x="20.2" y="789" width="0.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="23.22" y="799.5" ></text>
</g>
<g >
<title>Builtins_CallApiCallback (10,101,010 samples, 0.06%)</title><rect x="27.5" y="421" width="0.8" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="30.52" y="431.5" ></text>
</g>
<g >
<title>tty_insert_flip_string_and_push_buffer (10,101,010 samples, 0.06%)</title><rect x="17.3" y="693" width="0.7" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="20.30" y="703.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.06%)</title><rect x="15.8" y="309" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="18.84" y="319.5" ></text>
</g>
<g >
<title>vfs_writev (10,101,010 samples, 0.06%)</title><rect x="35.6" y="725" width="0.7" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="38.56" y="735.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (10,101,010 samples, 0.06%)</title><rect x="21.0" y="821" width="0.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="23.95" y="831.5" ></text>
</g>
<g >
<title>[unknown] (30,303,030 samples, 0.19%)</title><rect x="15.1" y="821" width="2.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="18.11" y="831.5" ></text>
</g>
<g >
<title>unix_destruct_scm (10,101,010 samples, 0.06%)</title><rect x="37.7" y="677" width="0.8" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="40.75" y="687.5" ></text>
</g>
<g >
<title>v8::internal::(anonymous namespace)::Invoke (10,101,010 samples, 0.06%)</title><rect x="26.8" y="549" width="0.7" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="29.79" y="559.5" ></text>
</g>
<g >
<title>do_sys_poll (10,101,010 samples, 0.06%)</title><rect x="26.1" y="773" width="0.7" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="29.06" y="783.5" ></text>
</g>
<g >
<title>tcp_seq_start (10,101,010 samples, 0.06%)</title><rect x="38.5" y="709" width="0.7" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="41.48" y="719.5" ></text>
</g>
<g >
<title>default_idle_call (999,999,990 samples, 6.13%)</title><rect x="1116.2" y="773" width="72.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1119.25" y="783.5" >default_..</text>
</g>
<g >
<title>__GI___libc_write (10,101,010 samples, 0.06%)</title><rect x="17.3" y="821" width="0.7" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="20.30" y="831.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (10,101,010 samples, 0.06%)</title><rect x="17.3" y="805" width="0.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="20.30" y="815.5" ></text>
</g>
<g >
<title>uv__work_done (20,202,020 samples, 0.12%)</title><rect x="26.8" y="709" width="1.5" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="29.79" y="719.5" ></text>
</g>
<g >
<title>[perf-1502.map] (10,101,010 samples, 0.06%)</title><rect x="27.5" y="469" width="0.8" height="15.0" fill="rgb(219,66,16)" rx="2" ry="2" />
<text  x="30.52" y="479.5" ></text>
</g>
<g >
<title>unix_stream_sendmsg (10,101,010 samples, 0.06%)</title><rect x="18.0" y="693" width="0.8" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="21.03" y="703.5" ></text>
</g>
<g >
<title>tty_insert_flip_string_and_push_buffer (10,101,010 samples, 0.06%)</title><rect x="1189.3" y="693" width="0.7" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1192.27" y="703.5" ></text>
</g>
<g >
<title>skb_copy_datagram_from_iter (10,101,010 samples, 0.06%)</title><rect x="18.0" y="677" width="0.8" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="21.03" y="687.5" ></text>
</g>
<g >
<title>seq_read (10,101,010 samples, 0.06%)</title><rect x="38.5" y="741" width="0.7" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="41.48" y="751.5" ></text>
</g>
<g >
<title>kthread (20,202,020 samples, 0.12%)</title><rect x="39.2" y="821" width="1.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="42.21" y="831.5" ></text>
</g>
<g >
<title>do_syscall_64 (20,202,020 samples, 0.12%)</title><rect x="37.7" y="805" width="1.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="40.75" y="815.5" ></text>
</g>
<g >
<title>____sys_recvmsg (10,101,010 samples, 0.06%)</title><rect x="37.7" y="757" width="0.8" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="40.75" y="767.5" ></text>
</g>
<g >
<title>start_kernel (999,999,990 samples, 6.13%)</title><rect x="1116.2" y="821" width="72.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1119.25" y="831.5" >start_ke..</text>
</g>
<g >
<title>swapper (16,050,504,890 samples, 98.33%)</title><rect x="28.3" y="853" width="1160.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="31.25" y="863.5" >swapper</text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.06%)</title><rect x="15.8" y="293" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="18.84" y="303.5" ></text>
</g>
<g >
<title>[unknown] (151,515,150 samples, 0.93%)</title><rect x="28.3" y="837" width="10.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="31.25" y="847.5" ></text>
</g>
<g >
<title>do_syscall_64 (10,101,010 samples, 0.06%)</title><rect x="17.3" y="789" width="0.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="20.30" y="799.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.06%)</title><rect x="15.8" y="341" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="18.84" y="351.5" ></text>
</g>
<g >
<title>node::NodeMainInstance::Run (20,202,020 samples, 0.12%)</title><rect x="26.8" y="805" width="1.5" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="29.79" y="815.5" ></text>
</g>
<g >
<title>unmap_region (10,101,010 samples, 0.06%)</title><rect x="20.2" y="709" width="0.8" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="23.22" y="719.5" ></text>
</g>
<g >
<title>skb_release_head_state (10,101,010 samples, 0.06%)</title><rect x="37.7" y="693" width="0.8" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="40.75" y="703.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (20,202,020 samples, 0.12%)</title><rect x="37.7" y="821" width="1.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="40.75" y="831.5" ></text>
</g>
<g >
<title>_dl_relocate_object (10,101,010 samples, 0.06%)</title><rect x="16.6" y="789" width="0.7" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="19.57" y="799.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.06%)</title><rect x="15.8" y="213" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="18.84" y="223.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.06%)</title><rect x="15.8" y="69" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="18.84" y="79.5" ></text>
</g>
<g >
<title>file_tty_write.constprop.0 (10,101,010 samples, 0.06%)</title><rect x="17.3" y="725" width="0.7" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="20.30" y="735.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.12%)</title><rect x="15.1" y="661" width="1.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="18.11" y="671.5" ></text>
</g>
<g >
<title>node::fs::FSReqPromise&lt;node::AliasedBufferBase&lt;double, v8::Float64Array&gt; &gt;::Resolve (10,101,010 samples, 0.06%)</title><rect x="27.5" y="661" width="0.8" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="30.52" y="671.5" ></text>
</g>
<g >
<title>fminf@plt (10,101,010 samples, 0.06%)</title><rect x="25.3" y="837" width="0.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="28.33" y="847.5" ></text>
</g>
<g >
<title>do_writev (10,101,010 samples, 0.06%)</title><rect x="1189.3" y="789" width="0.7" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1192.27" y="799.5" ></text>
</g>
<g >
<title>file_tty_write.constprop.0 (10,101,010 samples, 0.06%)</title><rect x="1189.3" y="725" width="0.7" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1192.27" y="735.5" ></text>
</g>
<g >
<title>node::fs::OpenFileHandle (10,101,010 samples, 0.06%)</title><rect x="27.5" y="405" width="0.8" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="30.52" y="415.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.12%)</title><rect x="15.1" y="613" width="1.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="18.11" y="623.5" ></text>
</g>
<g >
<title>queue_work_on (10,101,010 samples, 0.06%)</title><rect x="1189.3" y="677" width="0.7" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="1192.27" y="687.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.12%)</title><rect x="15.1" y="533" width="1.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="18.11" y="543.5" ></text>
</g>
<g >
<title>do_sys_poll (10,101,010 samples, 0.06%)</title><rect x="19.5" y="757" width="0.7" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="22.49" y="767.5" ></text>
</g>
<g >
<title>[perf-1502.map] (10,101,010 samples, 0.06%)</title><rect x="27.5" y="453" width="0.8" height="15.0" fill="rgb(219,66,16)" rx="2" ry="2" />
<text  x="30.52" y="463.5" ></text>
</g>
<g >
<title>do_iter_write (10,101,010 samples, 0.06%)</title><rect x="35.6" y="709" width="0.7" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="38.56" y="719.5" ></text>
</g>
<g >
<title>__vm_munmap (10,101,010 samples, 0.06%)</title><rect x="20.2" y="741" width="0.8" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="23.22" y="751.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.12%)</title><rect x="15.1" y="789" width="1.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="18.11" y="799.5" ></text>
</g>
<g >
<title>vmbus_on_event (20,202,020 samples, 0.12%)</title><rect x="1187.1" y="661" width="1.4" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1190.08" y="671.5" ></text>
</g>
<g >
<title>ksys_read (10,101,010 samples, 0.06%)</title><rect x="38.5" y="789" width="0.7" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="41.48" y="799.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.12%)</title><rect x="15.1" y="629" width="1.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="18.11" y="639.5" ></text>
</g>
<g >
<title>[tmux] (10,101,010 samples, 0.06%)</title><rect x="1188.5" y="837" width="0.8" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1191.54" y="847.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.12%)</title><rect x="15.1" y="725" width="1.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="18.11" y="735.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.12%)</title><rect x="15.1" y="741" width="1.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="18.11" y="751.5" ></text>
</g>
<g >
<title>vfs_writev (10,101,010 samples, 0.06%)</title><rect x="18.0" y="757" width="0.8" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="21.03" y="767.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (10,101,010 samples, 0.06%)</title><rect x="18.0" y="645" width="0.8" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="21.03" y="655.5" ></text>
</g>
<g >
<title>unix_stream_sendmsg (10,101,010 samples, 0.06%)</title><rect x="35.6" y="661" width="0.7" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="38.56" y="671.5" ></text>
</g>
<g >
<title>v8::internal::Factory::NewJSTypedArray (10,101,010 samples, 0.06%)</title><rect x="26.8" y="357" width="0.7" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="29.79" y="367.5" ></text>
</g>
<g >
<title>node::SpinEventLoopInternal (20,202,020 samples, 0.12%)</title><rect x="26.8" y="773" width="1.5" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="29.79" y="783.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (10,101,010 samples, 0.06%)</title><rect x="35.6" y="629" width="0.7" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="38.56" y="639.5" ></text>
</g>
<g >
<title>Builtins_PromiseFulfillReactionJob (10,101,010 samples, 0.06%)</title><rect x="26.8" y="501" width="0.7" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="29.79" y="511.5" ></text>
</g>
<g >
<title>new_sync_write (10,101,010 samples, 0.06%)</title><rect x="17.3" y="741" width="0.7" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="20.30" y="751.5" ></text>
</g>
<g >
<title>complete_walk (10,101,010 samples, 0.06%)</title><rect x="37.0" y="709" width="0.7" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="40.02" y="719.5" ></text>
</g>
<g >
<title>irq_exit_rcu (60,606,060 samples, 0.37%)</title><rect x="1184.2" y="709" width="4.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1187.16" y="719.5" ></text>
</g>
<g >
<title>__sys_recvmsg (10,101,010 samples, 0.06%)</title><rect x="37.7" y="789" width="0.8" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="40.75" y="799.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (10,101,010 samples, 0.06%)</title><rect x="1189.3" y="821" width="0.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1192.27" y="831.5" ></text>
</g>
<g >
<title>wake_up_q (10,101,010 samples, 0.06%)</title><rect x="27.5" y="261" width="0.8" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="30.52" y="271.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.12%)</title><rect x="15.1" y="485" width="1.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="18.11" y="495.5" ></text>
</g>
<g >
<title>node::fs::FSReqPromise&lt;node::AliasedBufferBase&lt;double, v8::Float64Array&gt; &gt;::New (10,101,010 samples, 0.06%)</title><rect x="26.8" y="405" width="0.7" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="29.79" y="415.5" ></text>
</g>
<g >
<title>clock_gettime@@GLIBC_2.17 (10,101,010 samples, 0.06%)</title><rect x="24.6" y="837" width="0.7" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="27.60" y="847.5" ></text>
</g>
<g >
<title>do_syscall_64 (20,202,020 samples, 0.12%)</title><rect x="36.3" y="789" width="1.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="39.29" y="799.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.06%)</title><rect x="15.8" y="165" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="18.84" y="175.5" ></text>
</g>
<g >
<title>path_parentat (10,101,010 samples, 0.06%)</title><rect x="37.0" y="725" width="0.7" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="40.02" y="735.5" ></text>
</g>
<g >
<title>v8::internal::MicrotaskQueue::RunMicrotasks (10,101,010 samples, 0.06%)</title><rect x="27.5" y="597" width="0.8" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="30.52" y="607.5" ></text>
</g>
<g >
<title>__GI___writev (10,101,010 samples, 0.06%)</title><rect x="1189.3" y="837" width="0.7" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1192.27" y="847.5" ></text>
</g>
<g >
<title>do_syscall_64 (10,101,010 samples, 0.06%)</title><rect x="1189.3" y="805" width="0.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1192.27" y="815.5" ></text>
</g>
<g >
<title>__schedule (10,101,010 samples, 0.06%)</title><rect x="36.3" y="709" width="0.7" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="39.29" y="719.5" ></text>
</g>
<g >
<title>v8::internal::(anonymous namespace)::Invoke (10,101,010 samples, 0.06%)</title><rect x="27.5" y="549" width="0.8" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="30.52" y="559.5" ></text>
</g>
<g >
<title>dxgvmb_send_create_allocation (10,101,010 samples, 0.06%)</title><rect x="21.0" y="741" width="0.7" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="23.95" y="751.5" ></text>
</g>
<g >
<title>dxgvmb_send_sync_msg (10,101,010 samples, 0.06%)</title><rect x="21.0" y="725" width="0.7" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="23.95" y="735.5" ></text>
</g>
<g >
<title>v8::internal::(anonymous namespace)::InvokeWithTryCatch (10,101,010 samples, 0.06%)</title><rect x="26.8" y="565" width="0.7" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="29.79" y="575.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (20,202,020 samples, 0.12%)</title><rect x="23.1" y="837" width="1.5" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="26.14" y="847.5" ></text>
</g>
<g >
<title>__libc_start_call_main (20,202,020 samples, 0.12%)</title><rect x="26.8" y="837" width="1.5" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="29.79" y="847.5" ></text>
</g>
<g >
<title>tmux:_server (20,202,020 samples, 0.12%)</title><rect x="1188.5" y="853" width="1.5" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="1191.54" y="863.5" ></text>
</g>
<g >
<title>v8::internal::MicrotaskQueue::PerformCheckpoint (10,101,010 samples, 0.06%)</title><rect x="26.8" y="613" width="0.7" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="29.79" y="623.5" ></text>
</g>
<g >
<title>default_idle (999,999,990 samples, 6.13%)</title><rect x="1116.2" y="757" width="72.3" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="1119.25" y="767.5" >default_..</text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.06%)</title><rect x="15.8" y="85" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="18.84" y="95.5" ></text>
</g>
<g >
<title>schedule (10,101,010 samples, 0.06%)</title><rect x="36.3" y="725" width="0.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="39.29" y="735.5" ></text>
</g>
<g >
<title>do_syscall_64 (10,101,010 samples, 0.06%)</title><rect x="21.0" y="805" width="0.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="23.95" y="815.5" ></text>
</g>
<g >
<title>futex_wake (10,101,010 samples, 0.06%)</title><rect x="27.5" y="277" width="0.8" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="30.52" y="287.5" ></text>
</g>
<g >
<title>do_syscall_64 (10,101,010 samples, 0.06%)</title><rect x="27.5" y="325" width="0.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="30.52" y="335.5" ></text>
</g>
<g >
<title>uv_run (20,202,020 samples, 0.12%)</title><rect x="26.8" y="757" width="1.5" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="29.79" y="767.5" ></text>
</g>
<g >
<title>[libnvwgf2umx.so] (10,101,010 samples, 0.06%)</title><rect x="15.8" y="37" width="0.8" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="18.84" y="47.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.06%)</title><rect x="15.8" y="405" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="18.84" y="415.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.12%)</title><rect x="15.1" y="597" width="1.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="18.11" y="607.5" ></text>
</g>
<g >
<title>__legitimize_path (10,101,010 samples, 0.06%)</title><rect x="37.0" y="677" width="0.7" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="40.02" y="687.5" ></text>
</g>
<g >
<title>copy_page_from_iter (10,101,010 samples, 0.06%)</title><rect x="18.0" y="661" width="0.8" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="21.03" y="671.5" ></text>
</g>
<g >
<title>__legitimize_mnt (10,101,010 samples, 0.06%)</title><rect x="37.0" y="661" width="0.7" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="40.02" y="671.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.06%)</title><rect x="15.8" y="261" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="18.84" y="271.5" ></text>
</g>
<g >
<title>v8::internal::MicrotaskQueue::PerformCheckpoint (10,101,010 samples, 0.06%)</title><rect x="27.5" y="613" width="0.8" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="30.52" y="623.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (10,101,010 samples, 0.06%)</title><rect x="35.6" y="693" width="0.7" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="38.56" y="703.5" ></text>
</g>
<g >
<title>v8::internal::(anonymous namespace)::InvokeWithTryCatch (10,101,010 samples, 0.06%)</title><rect x="27.5" y="565" width="0.8" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="30.52" y="575.5" ></text>
</g>
<g >
<title>wait_for_completion_killable (10,101,010 samples, 0.06%)</title><rect x="21.0" y="709" width="0.7" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="23.95" y="719.5" ></text>
</g>
<g >
<title>ret_from_fork (20,202,020 samples, 0.12%)</title><rect x="39.2" y="837" width="1.5" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="42.21" y="847.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.12%)</title><rect x="15.1" y="645" width="1.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="18.11" y="655.5" ></text>
</g>
<g >
<title>[libnvwgf2umx.so] (10,101,010 samples, 0.06%)</title><rect x="14.4" y="821" width="0.7" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="17.38" y="831.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (10,101,010 samples, 0.06%)</title><rect x="1189.3" y="741" width="0.7" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1192.27" y="751.5" ></text>
</g>
<g >
<title>__x64_sys_futex (10,101,010 samples, 0.06%)</title><rect x="27.5" y="309" width="0.8" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="30.52" y="319.5" ></text>
</g>
<g >
<title>__do_munmap (10,101,010 samples, 0.06%)</title><rect x="20.2" y="725" width="0.8" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="23.22" y="735.5" ></text>
</g>
<g >
<title>cpu_startup_entry (999,999,990 samples, 6.13%)</title><rect x="1116.2" y="805" width="72.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1119.25" y="815.5" >cpu_star..</text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.12%)</title><rect x="15.1" y="437" width="1.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="18.11" y="447.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.12%)</title><rect x="15.1" y="565" width="1.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="18.11" y="575.5" ></text>
</g>
<g >
<title>munmap (10,101,010 samples, 0.06%)</title><rect x="20.2" y="805" width="0.8" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="23.22" y="815.5" ></text>
</g>
<g >
<title>worker_thread (20,202,020 samples, 0.12%)</title><rect x="39.2" y="805" width="1.5" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="42.21" y="815.5" ></text>
</g>
<g >
<title>n_tty_write (10,101,010 samples, 0.06%)</title><rect x="1189.3" y="709" width="0.7" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1192.27" y="719.5" ></text>
</g>
<g >
<title>Builtins_JSRunMicrotasksEntry (10,101,010 samples, 0.06%)</title><rect x="26.8" y="533" width="0.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="29.79" y="543.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.06%)</title><rect x="15.8" y="117" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="18.84" y="127.5" ></text>
</g>
<g >
<title>node (20,202,020 samples, 0.12%)</title><rect x="26.8" y="853" width="1.5" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="29.79" y="863.5" ></text>
</g>
<g >
<title>sock_write_iter (10,101,010 samples, 0.06%)</title><rect x="35.6" y="677" width="0.7" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="38.56" y="687.5" ></text>
</g>
<g >
<title>node::fs::GetReqWrap (10,101,010 samples, 0.06%)</title><rect x="26.8" y="421" width="0.7" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="29.79" y="431.5" ></text>
</g>
<g >
<title>dxgvmbuschannel_receive (20,202,020 samples, 0.12%)</title><rect x="1187.1" y="645" width="1.4" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="1190.08" y="655.5" ></text>
</g>
<g >
<title>node::fs::Stat (10,101,010 samples, 0.06%)</title><rect x="26.8" y="437" width="0.7" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="29.79" y="447.5" ></text>
</g>
<g >
<title>[libnvwgf2umx.so] (10,101,010 samples, 0.06%)</title><rect x="15.1" y="405" width="0.7" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="18.11" y="415.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.06%)</title><rect x="35.6" y="789" width="0.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="38.56" y="799.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (20,202,020 samples, 0.12%)</title><rect x="36.3" y="805" width="1.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="39.29" y="815.5" ></text>
</g>
<g >
<title>Builtins_AsyncFunctionAwaitResolveClosure (10,101,010 samples, 0.06%)</title><rect x="26.8" y="485" width="0.7" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="29.79" y="495.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.06%)</title><rect x="15.8" y="357" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="18.84" y="367.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.06%)</title><rect x="15.8" y="389" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="18.84" y="399.5" ></text>
</g>
<g >
<title>[libGLX.so.0.0.0] (10,101,010 samples, 0.06%)</title><rect x="10.7" y="837" width="0.8" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="13.73" y="847.5" ></text>
</g>
<g >
<title>do_syscall_64 (10,101,010 samples, 0.06%)</title><rect x="20.2" y="773" width="0.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="23.22" y="783.5" ></text>
</g>
<g >
<title>sock_poll (10,101,010 samples, 0.06%)</title><rect x="26.1" y="757" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="29.06" y="767.5" ></text>
</g>
<g >
<title>node::NodeMainInstance::Run (20,202,020 samples, 0.12%)</title><rect x="26.8" y="789" width="1.5" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="29.79" y="799.5" ></text>
</g>
<g >
<title>node::InternalCallbackScope::Close (10,101,010 samples, 0.06%)</title><rect x="27.5" y="629" width="0.8" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="30.52" y="639.5" ></text>
</g>
<g >
<title>queue_work_on (10,101,010 samples, 0.06%)</title><rect x="17.3" y="677" width="0.7" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="20.30" y="687.5" ></text>
</g>
<g >
<title>sock_def_readable (10,101,010 samples, 0.06%)</title><rect x="35.6" y="645" width="0.7" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="38.56" y="655.5" ></text>
</g>
<g >
<title>node::Start (20,202,020 samples, 0.12%)</title><rect x="26.8" y="821" width="1.5" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="29.79" y="831.5" ></text>
</g>
<g >
<title>uv_fs_open (10,101,010 samples, 0.06%)</title><rect x="27.5" y="389" width="0.8" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="30.52" y="399.5" ></text>
</g>
<g >
<title>vfs_writev (10,101,010 samples, 0.06%)</title><rect x="1189.3" y="773" width="0.7" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1192.27" y="783.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.12%)</title><rect x="15.1" y="453" width="1.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="18.11" y="463.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.12%)</title><rect x="15.1" y="693" width="1.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="18.11" y="703.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.12%)</title><rect x="15.1" y="501" width="1.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="18.11" y="511.5" ></text>
</g>
<g >
<title>[libGLX_mesa.so.0.0.0] (10,101,010 samples, 0.06%)</title><rect x="12.9" y="821" width="0.8" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="15.92" y="831.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.06%)</title><rect x="15.8" y="181" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="18.84" y="191.5" ></text>
</g>
<g >
<title>dxgkio_create_allocation (10,101,010 samples, 0.06%)</title><rect x="21.0" y="757" width="0.7" height="15.0" fill="rgb(245,188,44)" rx="2" ry="2" />
<text  x="23.95" y="767.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.06%)</title><rect x="15.8" y="133" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="18.84" y="143.5" ></text>
</g>
<g >
<title>do_iter_write (10,101,010 samples, 0.06%)</title><rect x="1189.3" y="757" width="0.7" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1192.27" y="767.5" ></text>
</g>
<g >
<title>__filename_parentat (10,101,010 samples, 0.06%)</title><rect x="37.0" y="741" width="0.7" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="40.02" y="751.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.06%)</title><rect x="15.8" y="149" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="18.84" y="159.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.12%)</title><rect x="15.1" y="469" width="1.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="18.11" y="479.5" ></text>
</g>
<g >
<title>[libnvwgf2umx.so] (20,202,020 samples, 0.12%)</title><rect x="11.5" y="837" width="1.4" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="14.46" y="847.5" ></text>
</g>
<g >
<title>unix_write_space (10,101,010 samples, 0.06%)</title><rect x="37.7" y="645" width="0.8" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="40.75" y="655.5" ></text>
</g>
<g >
<title>unix_stream_read_generic (10,101,010 samples, 0.06%)</title><rect x="37.7" y="725" width="0.8" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="40.75" y="735.5" ></text>
</g>
<g >
<title>dl_open_worker_begin (10,101,010 samples, 0.06%)</title><rect x="16.6" y="805" width="0.7" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="19.57" y="815.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (10,101,010 samples, 0.06%)</title><rect x="20.2" y="693" width="0.8" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="23.22" y="703.5" ></text>
</g>
<g >
<title>__libc_start_call_main (20,202,020 samples, 0.12%)</title><rect x="21.7" y="837" width="1.4" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="24.68" y="847.5" ></text>
</g>
<g >
<title>do_syscall_64 (10,101,010 samples, 0.06%)</title><rect x="19.5" y="789" width="0.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="22.49" y="799.5" ></text>
</g>
<g >
<title>do_syscall_64 (10,101,010 samples, 0.06%)</title><rect x="18.0" y="789" width="0.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="21.03" y="799.5" ></text>
</g>
<g >
<title>tasklet_action_common.constprop.0 (20,202,020 samples, 0.12%)</title><rect x="1187.1" y="677" width="1.4" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1190.08" y="687.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (10,101,010 samples, 0.06%)</title><rect x="21.0" y="789" width="0.7" height="15.0" fill="rgb(249,204,49)" rx="2" ry="2" />
<text  x="23.95" y="799.5" ></text>
</g>
<g >
<title>all (16,323,232,160 samples, 100%)</title><rect x="10.0" y="869" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="879.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (10,101,010 samples, 0.06%)</title><rect x="27.5" y="341" width="0.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="30.52" y="351.5" ></text>
</g>
<g >
<title>sock_wfree (10,101,010 samples, 0.06%)</title><rect x="37.7" y="661" width="0.8" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="40.75" y="671.5" ></text>
</g>
<g >
<title>__x64_sys_poll (10,101,010 samples, 0.06%)</title><rect x="26.1" y="789" width="0.7" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="29.06" y="799.5" ></text>
</g>
<g >
<title>poll_freewait (10,101,010 samples, 0.06%)</title><rect x="19.5" y="741" width="0.7" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="22.49" y="751.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (10,101,010 samples, 0.06%)</title><rect x="20.2" y="757" width="0.8" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="23.22" y="767.5" ></text>
</g>
<g >
<title>try_to_wake_up (10,101,010 samples, 0.06%)</title><rect x="27.5" y="245" width="0.8" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="30.52" y="255.5" ></text>
</g>
<g >
<title>vfs_read (10,101,010 samples, 0.06%)</title><rect x="38.5" y="773" width="0.7" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="41.48" y="783.5" ></text>
</g>
<g >
<title>Builtins_RunMicrotasks (10,101,010 samples, 0.06%)</title><rect x="26.8" y="517" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="29.79" y="527.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (15,878,787,720 samples, 97.28%)</title><rect x="40.7" y="837" width="1147.8" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="43.67" y="847.5" >secondary_startup_64_no_verify</text>
</g>
<g >
<title>release_pages (10,101,010 samples, 0.06%)</title><rect x="20.2" y="677" width="0.8" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="23.22" y="687.5" ></text>
</g>
<g >
<title>sock_write_iter (10,101,010 samples, 0.06%)</title><rect x="18.0" y="709" width="0.8" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="21.03" y="719.5" ></text>
</g>
<g >
<title>cpu_startup_entry (14,878,787,730 samples, 91.15%)</title><rect x="40.7" y="821" width="1075.5" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="43.67" y="831.5" >cpu_startup_entry</text>
</g>
<g >
<title>do_idle (999,999,990 samples, 6.13%)</title><rect x="1116.2" y="789" width="72.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1119.25" y="799.5" >do_idle</text>
</g>
<g >
<title>[perf-1502.map] (10,101,010 samples, 0.06%)</title><rect x="26.8" y="469" width="0.7" height="15.0" fill="rgb(219,66,16)" rx="2" ry="2" />
<text  x="29.79" y="479.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (10,101,010 samples, 0.06%)</title><rect x="26.1" y="821" width="0.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="29.06" y="831.5" ></text>
</g>
<g >
<title>node::InternalCallbackScope::~InternalCallbackScope (10,101,010 samples, 0.06%)</title><rect x="26.8" y="645" width="0.7" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="29.79" y="655.5" ></text>
</g>
<g >
<title>__GI___writev (10,101,010 samples, 0.06%)</title><rect x="18.0" y="821" width="0.8" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="21.03" y="831.5" ></text>
</g>
<g >
<title>[init] (10,101,010 samples, 0.06%)</title><rect x="26.1" y="837" width="0.7" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="29.06" y="847.5" ></text>
</g>
<g >
<title>Builtins_JSRunMicrotasksEntry (10,101,010 samples, 0.06%)</title><rect x="27.5" y="533" width="0.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="30.52" y="543.5" ></text>
</g>
<g >
<title>seq_read_iter (10,101,010 samples, 0.06%)</title><rect x="38.5" y="725" width="0.7" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="41.48" y="735.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.12%)</title><rect x="15.1" y="773" width="1.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="18.11" y="783.5" ></text>
</g>
<g >
<title>hvs_notify_poll_out (10,101,010 samples, 0.06%)</title><rect x="26.1" y="725" width="0.7" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="29.06" y="735.5" ></text>
</g>
<g >
<title>ksys_write (10,101,010 samples, 0.06%)</title><rect x="17.3" y="773" width="0.7" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="20.30" y="783.5" ></text>
</g>
<g >
<title>default_idle_call (14,878,787,730 samples, 91.15%)</title><rect x="40.7" y="789" width="1075.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="43.67" y="799.5" >default_idle_call</text>
</g>
<g >
<title>do_futex (10,101,010 samples, 0.06%)</title><rect x="27.5" y="293" width="0.8" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="30.52" y="303.5" ></text>
</g>
<g >
<title>do_syscall_64 (10,101,010 samples, 0.06%)</title><rect x="26.1" y="805" width="0.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="29.06" y="815.5" ></text>
</g>
<g >
<title>__poll (10,101,010 samples, 0.06%)</title><rect x="19.5" y="821" width="0.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="22.49" y="831.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.06%)</title><rect x="15.8" y="373" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="18.84" y="383.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.06%)</title><rect x="35.6" y="805" width="0.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="38.56" y="815.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.12%)</title><rect x="15.1" y="757" width="1.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="18.11" y="767.5" ></text>
</g>
<g >
<title>do_writev (10,101,010 samples, 0.06%)</title><rect x="35.6" y="741" width="0.7" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="38.56" y="751.5" ></text>
</g>
<g >
<title>[perf-1502.map] (10,101,010 samples, 0.06%)</title><rect x="27.5" y="437" width="0.8" height="15.0" fill="rgb(219,66,16)" rx="2" ry="2" />
<text  x="30.52" y="447.5" ></text>
</g>
<g >
<title>RaylibImGuiExam (222,222,220 samples, 1.36%)</title><rect x="10.0" y="853" width="16.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="13.00" y="863.5" ></text>
</g>
<g >
<title>node::fs::AfterStringPtr (10,101,010 samples, 0.06%)</title><rect x="27.5" y="677" width="0.8" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="30.52" y="687.5" ></text>
</g>
<g >
<title>do_iter_write (10,101,010 samples, 0.06%)</title><rect x="18.0" y="741" width="0.8" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="21.03" y="751.5" ></text>
</g>
<g >
<title>node::InternalCallbackScope::~InternalCallbackScope (10,101,010 samples, 0.06%)</title><rect x="27.5" y="645" width="0.8" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="30.52" y="655.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (10,101,010 samples, 0.06%)</title><rect x="36.3" y="741" width="0.7" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="39.29" y="751.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.06%)</title><rect x="15.8" y="245" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="18.84" y="255.5" ></text>
</g>
<g >
<title>__wait_for_common (10,101,010 samples, 0.06%)</title><rect x="21.0" y="693" width="0.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="23.95" y="703.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (10,101,010 samples, 0.06%)</title><rect x="18.8" y="821" width="0.7" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="21.76" y="831.5" ></text>
</g>
<g >
<title>[unknown] (80,808,080 samples, 0.50%)</title><rect x="31.9" y="821" width="5.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="34.91" y="831.5" ></text>
</g>
<g >
<title>dxgk_unlocked_ioctl (10,101,010 samples, 0.06%)</title><rect x="21.0" y="773" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="23.95" y="783.5" ></text>
</g>
<g >
<title>pthread_cond_signal@@GLIBC_2.3.2 (10,101,010 samples, 0.06%)</title><rect x="27.5" y="357" width="0.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="30.52" y="367.5" ></text>
</g>
<g >
<title>sysvec_hyperv_callback (60,606,060 samples, 0.37%)</title><rect x="1184.2" y="725" width="4.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1187.16" y="735.5" ></text>
</g>
<g >
<title>Relay(15) (10,101,010 samples, 0.06%)</title><rect x="26.1" y="853" width="0.7" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="29.06" y="863.5" ></text>
</g>
<g >
<title>uv__work_submit (10,101,010 samples, 0.06%)</title><rect x="27.5" y="373" width="0.8" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="30.52" y="383.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (10,101,010 samples, 0.06%)</title><rect x="37.7" y="629" width="0.8" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="40.75" y="639.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.06%)</title><rect x="15.8" y="101" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="18.84" y="111.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.12%)</title><rect x="15.1" y="677" width="1.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="18.11" y="687.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.12%)</title><rect x="15.1" y="421" width="1.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="18.11" y="431.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.12%)</title><rect x="15.1" y="709" width="1.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="18.11" y="719.5" ></text>
</g>
<g >
<title>__x64_sys_poll (10,101,010 samples, 0.06%)</title><rect x="19.5" y="773" width="0.7" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="22.49" y="783.5" ></text>
</g>
<g >
<title>[libX11.so.6.4.0] (10,101,010 samples, 0.06%)</title><rect x="13.7" y="821" width="0.7" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="16.65" y="831.5" ></text>
</g>
<g >
<title>v8::internal::Execution::TryRunMicrotasks (10,101,010 samples, 0.06%)</title><rect x="26.8" y="581" width="0.7" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="29.79" y="591.5" ></text>
</g>
<g >
<title>do_unlinkat (10,101,010 samples, 0.06%)</title><rect x="37.0" y="757" width="0.7" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="40.02" y="767.5" ></text>
</g>
<g >
<title>do_writev (10,101,010 samples, 0.06%)</title><rect x="18.0" y="773" width="0.8" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="21.03" y="783.5" ></text>
</g>
<g >
<title>consume_skb (10,101,010 samples, 0.06%)</title><rect x="37.7" y="709" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="40.75" y="719.5" ></text>
</g>
<g >
<title>v8::internal::Execution::TryRunMicrotasks (10,101,010 samples, 0.06%)</title><rect x="27.5" y="581" width="0.8" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="30.52" y="591.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.06%)</title><rect x="15.8" y="325" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="18.84" y="335.5" ></text>
</g>
<g >
<title>process_one_work (20,202,020 samples, 0.12%)</title><rect x="39.2" y="789" width="1.5" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="42.21" y="799.5" ></text>
</g>
<g >
<title>n_tty_write (10,101,010 samples, 0.06%)</title><rect x="17.3" y="709" width="0.7" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="20.30" y="719.5" ></text>
</g>
<g >
<title>_dl_close (10,101,010 samples, 0.06%)</title><rect x="20.2" y="821" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="23.22" y="831.5" ></text>
</g>
<g >
<title>uv__io_poll (20,202,020 samples, 0.12%)</title><rect x="26.8" y="741" width="1.5" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="29.79" y="751.5" ></text>
</g>
<g >
<title>___sys_recvmsg (10,101,010 samples, 0.06%)</title><rect x="37.7" y="773" width="0.8" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="40.75" y="783.5" ></text>
</g>
</g>
</svg>
